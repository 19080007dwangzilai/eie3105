
EIE3105_Lab1_G.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  000009ec  00000a80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009ec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800122  00800122  00000aa2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000aa2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b00  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000b40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a06  00000000  00000000  00000ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000073c  00000000  00000000  000015a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000499  00000000  00000000  00001ce2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000118  00000000  00000000  0000217c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000468  00000000  00000000  00002294  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002ba  00000000  00000000  000026fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000029b6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 62 01 	jmp	0x2c4	; 0x2c4 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ee       	ldi	r30, 0xEC	; 236
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 32       	cpi	r26, 0x22	; 34
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e2       	ldi	r26, 0x22	; 34
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 33       	cpi	r26, 0x38	; 56
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a7 00 	call	0x14e	; 0x14e <main>
  9e:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <io_init>:
	if (ch == 0)
		OCR0B = pwm_val;
	else if (ch == 1)
		OCR1B = pwm_val;
	else if (ch == 2)
		OCR2B = pwm_val;
  a6:	17 b8       	out	0x07, r1	; 7
  a8:	8f ef       	ldi	r24, 0xFF	; 255
  aa:	88 b9       	out	0x08, r24	; 8
  ac:	8a b1       	in	r24, 0x0a	; 10
  ae:	88 62       	ori	r24, 0x28	; 40
  b0:	8a b9       	out	0x0a, r24	; 10
  b2:	22 9a       	sbi	0x04, 2	; 4
  b4:	08 95       	ret

000000b6 <usart_init>:
  b6:	88 e1       	ldi	r24, 0x18	; 24
  b8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  bc:	86 e0       	ldi	r24, 0x06	; 6
  be:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  c2:	87 e6       	ldi	r24, 0x67	; 103
  c4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  c8:	08 95       	ret

000000ca <adc_init>:
  ca:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
  ce:	ea e7       	ldi	r30, 0x7A	; 122
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	8f 68       	ori	r24, 0x8F	; 143
  d6:	80 83       	st	Z, r24
  d8:	80 81       	ld	r24, Z
  da:	80 64       	ori	r24, 0x40	; 64
  dc:	80 83       	st	Z, r24
  de:	08 95       	ret

000000e0 <pwm_init>:
  e0:	83 ea       	ldi	r24, 0xA3	; 163
  e2:	84 bd       	out	0x24, r24	; 36
  e4:	9c e0       	ldi	r25, 0x0C	; 12
  e6:	95 bd       	out	0x25, r25	; 37
  e8:	9c e7       	ldi	r25, 0x7C	; 124
  ea:	97 bd       	out	0x27, r25	; 39
  ec:	18 bc       	out	0x28, r1	; 40
  ee:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
  f2:	2c e1       	ldi	r18, 0x1C	; 28
  f4:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  f8:	2c e7       	ldi	r18, 0x7C	; 124
  fa:	30 e0       	ldi	r19, 0x00	; 0
  fc:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 100:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 104:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 108:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 10c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 110:	8e e0       	ldi	r24, 0x0E	; 14
 112:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
 116:	90 93 b3 00 	sts	0x00B3, r25	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 11a:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
 11e:	08 95       	ret

00000120 <USART_send>:
}

void USART_send(unsigned char data)
{	
	while(!(UCSR0A & (1<<UDRE0)));
 120:	e0 ec       	ldi	r30, 0xC0	; 192
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	90 81       	ld	r25, Z
 126:	95 ff       	sbrs	r25, 5
 128:	fd cf       	rjmp	.-6      	; 0x124 <USART_send+0x4>
	UDR0 = data;
 12a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 12e:	08 95       	ret

00000130 <USART_putstring>:
}

void USART_putstring(char* StringPtr)
{
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00)
 136:	88 81       	ld	r24, Y
 138:	88 23       	and	r24, r24
 13a:	31 f0       	breq	.+12     	; 0x148 <USART_putstring+0x18>
 13c:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_send(*StringPtr);
 13e:	0e 94 90 00 	call	0x120	; 0x120 <USART_send>
	UDR0 = data;
}

void USART_putstring(char* StringPtr)
{
	while(*StringPtr != 0x00)
 142:	89 91       	ld	r24, Y+
 144:	81 11       	cpse	r24, r1
 146:	fb cf       	rjmp	.-10     	; 0x13e <USART_putstring+0xe>
	{
		USART_send(*StringPtr);
		StringPtr++;
	}
}
 148:	df 91       	pop	r29
 14a:	cf 91       	pop	r28
 14c:	08 95       	ret

0000014e <main>:

int main(void)
{
	io_init();
 14e:	0e 94 53 00 	call	0xa6	; 0xa6 <io_init>
	usart_init();
 152:	0e 94 5b 00 	call	0xb6	; 0xb6 <usart_init>
	adc_init();
 156:	0e 94 65 00 	call	0xca	; 0xca <adc_init>
	pwm_init();
 15a:	0e 94 70 00 	call	0xe0	; 0xe0 <pwm_init>
	sei();
 15e:	78 94       	sei
}

void pwm_update(unsigned int ch, unsigned int pwm_val)
{
	if (ch == 0)
		OCR0B = pwm_val;
 160:	dc e7       	ldi	r29, 0x7C	; 124
	else if (ch == 1)
		OCR1B = pwm_val;
 162:	aa e8       	ldi	r26, 0x8A	; 138
 164:	b0 e0       	ldi	r27, 0x00	; 0
 166:	6c e7       	ldi	r22, 0x7C	; 124
 168:	70 e0       	ldi	r23, 0x00	; 0
	else if (ch == 2)
		OCR2B = pwm_val;
 16a:	e4 eb       	ldi	r30, 0xB4	; 180
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	c2 e3       	ldi	r28, 0x32	; 50
	pwm_init();
	sei();

    while (1)
	{
		if ((result_0 > thres) && !state_0)
 170:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <result_0>
 174:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <result_0+0x1>
 178:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <thres>
 17c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <thres+0x1>
 180:	82 17       	cp	r24, r18
 182:	93 07       	cpc	r25, r19
 184:	9c f4       	brge	.+38     	; 0x1ac <main+0x5e>
 186:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <state_0>
 18a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <state_0+0x1>
 18e:	45 2b       	or	r20, r21
 190:	09 f0       	breq	.+2      	; 0x194 <main+0x46>
 192:	8a c0       	rjmp	.+276    	; 0x2a8 <main+0x15a>
}

void pwm_update(unsigned int ch, unsigned int pwm_val)
{
	if (ch == 0)
		OCR0B = pwm_val;
 194:	d8 bd       	out	0x28, r29	; 40
    while (1)
	{
		if ((result_0 > thres) && !state_0)
		{
			pwm_update(0, 124);
			state_0 ^= 1;
 196:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <state_0>
 19a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <state_0+0x1>
 19e:	21 e0       	ldi	r18, 0x01	; 1
 1a0:	82 27       	eor	r24, r18
 1a2:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <state_0+0x1>
 1a6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state_0>
 1aa:	14 c0       	rjmp	.+40     	; 0x1d4 <main+0x86>
		}
		else if ((result_0 < thres) && state_0)
 1ac:	28 17       	cp	r18, r24
 1ae:	39 07       	cpc	r19, r25
 1b0:	8c f4       	brge	.+34     	; 0x1d4 <main+0x86>
 1b2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <state_0>
 1b6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <state_0+0x1>
 1ba:	89 2b       	or	r24, r25
 1bc:	59 f0       	breq	.+22     	; 0x1d4 <main+0x86>
}

void pwm_update(unsigned int ch, unsigned int pwm_val)
{
	if (ch == 0)
		OCR0B = pwm_val;
 1be:	18 bc       	out	0x28, r1	; 40
			state_0 ^= 1;
		}
		else if ((result_0 < thres) && state_0)
		{
			pwm_update(0, 0);
			state_0 ^= 1;
 1c0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <state_0>
 1c4:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <state_0+0x1>
 1c8:	21 e0       	ldi	r18, 0x01	; 1
 1ca:	82 27       	eor	r24, r18
 1cc:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <state_0+0x1>
 1d0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state_0>
		}

		if ((result_1 > thres) && !state_1)
 1d4:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <result_1>
 1d8:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <result_1+0x1>
 1dc:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <thres>
 1e0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <thres+0x1>
 1e4:	82 17       	cp	r24, r18
 1e6:	93 07       	cpc	r25, r19
 1e8:	ac f4       	brge	.+42     	; 0x214 <main+0xc6>
 1ea:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <state_1>
 1ee:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <state_1+0x1>
 1f2:	45 2b       	or	r20, r21
 1f4:	09 f0       	breq	.+2      	; 0x1f8 <main+0xaa>
 1f6:	5d c0       	rjmp	.+186    	; 0x2b2 <main+0x164>
void pwm_update(unsigned int ch, unsigned int pwm_val)
{
	if (ch == 0)
		OCR0B = pwm_val;
	else if (ch == 1)
		OCR1B = pwm_val;
 1f8:	11 96       	adiw	r26, 0x01	; 1
 1fa:	7c 93       	st	X, r23
 1fc:	6e 93       	st	-X, r22
		}

		if ((result_1 > thres) && !state_1)
		{
			pwm_update(1, 124);
			state_1 ^= 1;
 1fe:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <state_1>
 202:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <state_1+0x1>
 206:	21 e0       	ldi	r18, 0x01	; 1
 208:	82 27       	eor	r24, r18
 20a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <state_1+0x1>
 20e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <state_1>
 212:	16 c0       	rjmp	.+44     	; 0x240 <main+0xf2>
		}
		else if ((result_1 < thres) && state_1)
 214:	28 17       	cp	r18, r24
 216:	39 07       	cpc	r19, r25
 218:	9c f4       	brge	.+38     	; 0x240 <main+0xf2>
 21a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <state_1>
 21e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <state_1+0x1>
 222:	89 2b       	or	r24, r25
 224:	69 f0       	breq	.+26     	; 0x240 <main+0xf2>
void pwm_update(unsigned int ch, unsigned int pwm_val)
{
	if (ch == 0)
		OCR0B = pwm_val;
	else if (ch == 1)
		OCR1B = pwm_val;
 226:	11 96       	adiw	r26, 0x01	; 1
 228:	1c 92       	st	X, r1
 22a:	1e 92       	st	-X, r1
			state_1 ^= 1;
		}
		else if ((result_1 < thres) && state_1)
		{
			pwm_update(1, 0);
			state_1 ^= 1;
 22c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <state_1>
 230:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <state_1+0x1>
 234:	21 e0       	ldi	r18, 0x01	; 1
 236:	82 27       	eor	r24, r18
 238:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <state_1+0x1>
 23c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <state_1>
		}

		if ((result_2 > thres) && !state_2)
 240:	20 91 32 01 	lds	r18, 0x0132	; 0x800132 <result_2>
 244:	30 91 33 01 	lds	r19, 0x0133	; 0x800133 <result_2+0x1>
 248:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <thres>
 24c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <thres+0x1>
 250:	82 17       	cp	r24, r18
 252:	93 07       	cpc	r25, r19
 254:	94 f4       	brge	.+36     	; 0x27a <main+0x12c>
 256:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 25a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 25e:	45 2b       	or	r20, r21
 260:	61 f5       	brne	.+88     	; 0x2ba <main+0x16c>
	if (ch == 0)
		OCR0B = pwm_val;
	else if (ch == 1)
		OCR1B = pwm_val;
	else if (ch == 2)
		OCR2B = pwm_val;
 262:	c0 83       	st	Z, r28
		}

		if ((result_2 > thres) && !state_2)
		{
			pwm_update(2, 50);
			state_2 ^= 1;
 264:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 268:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 26c:	21 e0       	ldi	r18, 0x01	; 1
 26e:	82 27       	eor	r24, r18
 270:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 274:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 278:	7b cf       	rjmp	.-266    	; 0x170 <main+0x22>
		}
		else if ((result_2 < thres) && state_2)
 27a:	28 17       	cp	r18, r24
 27c:	39 07       	cpc	r19, r25
 27e:	0c f0       	brlt	.+2      	; 0x282 <main+0x134>
 280:	77 cf       	rjmp	.-274    	; 0x170 <main+0x22>
 282:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 286:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 28a:	89 2b       	or	r24, r25
 28c:	09 f4       	brne	.+2      	; 0x290 <main+0x142>
 28e:	70 cf       	rjmp	.-288    	; 0x170 <main+0x22>
	if (ch == 0)
		OCR0B = pwm_val;
	else if (ch == 1)
		OCR1B = pwm_val;
	else if (ch == 2)
		OCR2B = pwm_val;
 290:	10 82       	st	Z, r1
			state_2 ^= 1;
		}
		else if ((result_2 < thres) && state_2)
		{
			pwm_update(2, 0);
			state_2 ^= 1;
 292:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 296:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 29a:	21 e0       	ldi	r18, 0x01	; 1
 29c:	82 27       	eor	r24, r18
 29e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 2a2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 2a6:	64 cf       	rjmp	.-312    	; 0x170 <main+0x22>
		if ((result_0 > thres) && !state_0)
		{
			pwm_update(0, 124);
			state_0 ^= 1;
		}
		else if ((result_0 < thres) && state_0)
 2a8:	28 17       	cp	r18, r24
 2aa:	39 07       	cpc	r19, r25
 2ac:	0c f0       	brlt	.+2      	; 0x2b0 <main+0x162>
 2ae:	92 cf       	rjmp	.-220    	; 0x1d4 <main+0x86>
 2b0:	86 cf       	rjmp	.-244    	; 0x1be <main+0x70>
		if ((result_1 > thres) && !state_1)
		{
			pwm_update(1, 124);
			state_1 ^= 1;
		}
		else if ((result_1 < thres) && state_1)
 2b2:	28 17       	cp	r18, r24
 2b4:	39 07       	cpc	r19, r25
 2b6:	24 f6       	brge	.-120    	; 0x240 <main+0xf2>
 2b8:	b6 cf       	rjmp	.-148    	; 0x226 <main+0xd8>
		if ((result_2 > thres) && !state_2)
		{
			pwm_update(2, 50);
			state_2 ^= 1;
		}
		else if ((result_2 < thres) && state_2)
 2ba:	28 17       	cp	r18, r24
 2bc:	39 07       	cpc	r19, r25
 2be:	0c f0       	brlt	.+2      	; 0x2c2 <main+0x174>
 2c0:	57 cf       	rjmp	.-338    	; 0x170 <main+0x22>
 2c2:	e6 cf       	rjmp	.-52     	; 0x290 <main+0x142>

000002c4 <__vector_21>:
		}
	}
}

ISR(ADC_vect)
{
 2c4:	1f 92       	push	r1
 2c6:	0f 92       	push	r0
 2c8:	0f b6       	in	r0, 0x3f	; 63
 2ca:	0f 92       	push	r0
 2cc:	11 24       	eor	r1, r1
 2ce:	2f 93       	push	r18
 2d0:	3f 93       	push	r19
 2d2:	4f 93       	push	r20
 2d4:	5f 93       	push	r21
 2d6:	6f 93       	push	r22
 2d8:	7f 93       	push	r23
 2da:	8f 93       	push	r24
 2dc:	9f 93       	push	r25
 2de:	af 93       	push	r26
 2e0:	bf 93       	push	r27
 2e2:	ef 93       	push	r30
 2e4:	ff 93       	push	r31
	if (ADMUX == 0x00)
 2e6:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 2ea:	81 11       	cpse	r24, r1
 2ec:	28 c0       	rjmp	.+80     	; 0x33e <__vector_21+0x7a>
	{
		sprintf(result, "ch0=%d, ch1=%d, ch2=%d\r\n", result_0, result_1, result_2);
 2ee:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <result_2+0x1>
 2f2:	8f 93       	push	r24
 2f4:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <result_2>
 2f8:	8f 93       	push	r24
 2fa:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <result_1+0x1>
 2fe:	8f 93       	push	r24
 300:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <result_1>
 304:	8f 93       	push	r24
 306:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <result_0+0x1>
 30a:	8f 93       	push	r24
 30c:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <result_0>
 310:	8f 93       	push	r24
 312:	88 e0       	ldi	r24, 0x08	; 8
 314:	91 e0       	ldi	r25, 0x01	; 1
 316:	9f 93       	push	r25
 318:	8f 93       	push	r24
 31a:	82 e2       	ldi	r24, 0x22	; 34
 31c:	91 e0       	ldi	r25, 0x01	; 1
 31e:	9f 93       	push	r25
 320:	8f 93       	push	r24
 322:	0e 94 0a 02 	call	0x414	; 0x414 <sprintf>
		USART_putstring(result);
 326:	82 e2       	ldi	r24, 0x22	; 34
 328:	91 e0       	ldi	r25, 0x01	; 1
 32a:	0e 94 98 00 	call	0x130	; 0x130 <USART_putstring>
 32e:	8d b7       	in	r24, 0x3d	; 61
 330:	9e b7       	in	r25, 0x3e	; 62
 332:	0a 96       	adiw	r24, 0x0a	; 10
 334:	0f b6       	in	r0, 0x3f	; 63
 336:	f8 94       	cli
 338:	9e bf       	out	0x3e, r25	; 62
 33a:	0f be       	out	0x3f, r0	; 63
 33c:	8d bf       	out	0x3d, r24	; 61
	}
	if (ADMUX == 0x00)
 33e:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 342:	81 11       	cpse	r24, r1
 344:	19 c0       	rjmp	.+50     	; 0x378 <__vector_21+0xb4>
	{
		result_l_0 = ADCL;
 346:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 34a:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <result_l_0>
		result_h_0 = ADCH;
 34e:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 352:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <result_h_0>
		result_0 = 256 * result_h_0 + result_l_0;
 356:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <result_h_0>
 35a:	20 91 31 01 	lds	r18, 0x0131	; 0x800131 <result_l_0>
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	98 2f       	mov	r25, r24
 362:	88 27       	eor	r24, r24
 364:	82 0f       	add	r24, r18
 366:	91 1d       	adc	r25, r1
 368:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <result_0+0x1>
 36c:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <result_0>
		ADMUX = 0x01;
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 376:	38 c0       	rjmp	.+112    	; 0x3e8 <__vector_21+0x124>
	}
	else if (ADMUX == 0x01)
 378:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 37c:	81 30       	cpi	r24, 0x01	; 1
 37e:	c9 f4       	brne	.+50     	; 0x3b2 <__vector_21+0xee>
	{
		result_l_1 = ADCL;
 380:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 384:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <result_l_1>
		result_h_1 = ADCH;
 388:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 38c:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <result_h_1>
		result_1 = 256 * result_h_1 + result_l_1;
 390:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <result_h_1>
 394:	20 91 2f 01 	lds	r18, 0x012F	; 0x80012f <result_l_1>
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	98 2f       	mov	r25, r24
 39c:	88 27       	eor	r24, r24
 39e:	82 0f       	add	r24, r18
 3a0:	91 1d       	adc	r25, r1
 3a2:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <result_1+0x1>
 3a6:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <result_1>
		ADMUX = 0x02;
 3aa:	82 e0       	ldi	r24, 0x02	; 2
 3ac:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 3b0:	1b c0       	rjmp	.+54     	; 0x3e8 <__vector_21+0x124>
	}
	else if (ADMUX == 0x02)
 3b2:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 3b6:	82 30       	cpi	r24, 0x02	; 2
 3b8:	b9 f4       	brne	.+46     	; 0x3e8 <__vector_21+0x124>
	{
		result_l_2 = ADCL;
 3ba:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 3be:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <result_l_2>
		result_h_2 = ADCH;
 3c2:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 3c6:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <result_h_2>
		result_2 = 256 * result_h_2 + result_l_2;
 3ca:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <result_h_2>
 3ce:	20 91 2d 01 	lds	r18, 0x012D	; 0x80012d <result_l_2>
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	98 2f       	mov	r25, r24
 3d6:	88 27       	eor	r24, r24
 3d8:	82 0f       	add	r24, r18
 3da:	91 1d       	adc	r25, r1
 3dc:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <result_2+0x1>
 3e0:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <result_2>
		ADMUX = 0x00;
 3e4:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	}
	ADCSRA |= (1<<ADSC);
 3e8:	ea e7       	ldi	r30, 0x7A	; 122
 3ea:	f0 e0       	ldi	r31, 0x00	; 0
 3ec:	80 81       	ld	r24, Z
 3ee:	80 64       	ori	r24, 0x40	; 64
 3f0:	80 83       	st	Z, r24
 3f2:	ff 91       	pop	r31
 3f4:	ef 91       	pop	r30
 3f6:	bf 91       	pop	r27
 3f8:	af 91       	pop	r26
 3fa:	9f 91       	pop	r25
 3fc:	8f 91       	pop	r24
 3fe:	7f 91       	pop	r23
 400:	6f 91       	pop	r22
 402:	5f 91       	pop	r21
 404:	4f 91       	pop	r20
 406:	3f 91       	pop	r19
 408:	2f 91       	pop	r18
 40a:	0f 90       	pop	r0
 40c:	0f be       	out	0x3f, r0	; 63
 40e:	0f 90       	pop	r0
 410:	1f 90       	pop	r1
 412:	18 95       	reti

00000414 <sprintf>:
 414:	ae e0       	ldi	r26, 0x0E	; 14
 416:	b0 e0       	ldi	r27, 0x00	; 0
 418:	e0 e1       	ldi	r30, 0x10	; 16
 41a:	f2 e0       	ldi	r31, 0x02	; 2
 41c:	0c 94 cb 04 	jmp	0x996	; 0x996 <__prologue_saves__+0x1c>
 420:	0d 89       	ldd	r16, Y+21	; 0x15
 422:	1e 89       	ldd	r17, Y+22	; 0x16
 424:	86 e0       	ldi	r24, 0x06	; 6
 426:	8c 83       	std	Y+4, r24	; 0x04
 428:	1a 83       	std	Y+2, r17	; 0x02
 42a:	09 83       	std	Y+1, r16	; 0x01
 42c:	8f ef       	ldi	r24, 0xFF	; 255
 42e:	9f e7       	ldi	r25, 0x7F	; 127
 430:	9e 83       	std	Y+6, r25	; 0x06
 432:	8d 83       	std	Y+5, r24	; 0x05
 434:	ae 01       	movw	r20, r28
 436:	47 5e       	subi	r20, 0xE7	; 231
 438:	5f 4f       	sbci	r21, 0xFF	; 255
 43a:	6f 89       	ldd	r22, Y+23	; 0x17
 43c:	78 8d       	ldd	r23, Y+24	; 0x18
 43e:	ce 01       	movw	r24, r28
 440:	01 96       	adiw	r24, 0x01	; 1
 442:	0e 94 2c 02 	call	0x458	; 0x458 <vfprintf>
 446:	ef 81       	ldd	r30, Y+7	; 0x07
 448:	f8 85       	ldd	r31, Y+8	; 0x08
 44a:	e0 0f       	add	r30, r16
 44c:	f1 1f       	adc	r31, r17
 44e:	10 82       	st	Z, r1
 450:	2e 96       	adiw	r28, 0x0e	; 14
 452:	e4 e0       	ldi	r30, 0x04	; 4
 454:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__epilogue_restores__+0x1c>

00000458 <vfprintf>:
 458:	ab e0       	ldi	r26, 0x0B	; 11
 45a:	b0 e0       	ldi	r27, 0x00	; 0
 45c:	e2 e3       	ldi	r30, 0x32	; 50
 45e:	f2 e0       	ldi	r31, 0x02	; 2
 460:	0c 94 bd 04 	jmp	0x97a	; 0x97a <__prologue_saves__>
 464:	6c 01       	movw	r12, r24
 466:	7b 01       	movw	r14, r22
 468:	8a 01       	movw	r16, r20
 46a:	fc 01       	movw	r30, r24
 46c:	17 82       	std	Z+7, r1	; 0x07
 46e:	16 82       	std	Z+6, r1	; 0x06
 470:	83 81       	ldd	r24, Z+3	; 0x03
 472:	81 ff       	sbrs	r24, 1
 474:	cc c1       	rjmp	.+920    	; 0x80e <vfprintf+0x3b6>
 476:	ce 01       	movw	r24, r28
 478:	01 96       	adiw	r24, 0x01	; 1
 47a:	3c 01       	movw	r6, r24
 47c:	f6 01       	movw	r30, r12
 47e:	93 81       	ldd	r25, Z+3	; 0x03
 480:	f7 01       	movw	r30, r14
 482:	93 fd       	sbrc	r25, 3
 484:	85 91       	lpm	r24, Z+
 486:	93 ff       	sbrs	r25, 3
 488:	81 91       	ld	r24, Z+
 48a:	7f 01       	movw	r14, r30
 48c:	88 23       	and	r24, r24
 48e:	09 f4       	brne	.+2      	; 0x492 <vfprintf+0x3a>
 490:	ba c1       	rjmp	.+884    	; 0x806 <vfprintf+0x3ae>
 492:	85 32       	cpi	r24, 0x25	; 37
 494:	39 f4       	brne	.+14     	; 0x4a4 <vfprintf+0x4c>
 496:	93 fd       	sbrc	r25, 3
 498:	85 91       	lpm	r24, Z+
 49a:	93 ff       	sbrs	r25, 3
 49c:	81 91       	ld	r24, Z+
 49e:	7f 01       	movw	r14, r30
 4a0:	85 32       	cpi	r24, 0x25	; 37
 4a2:	29 f4       	brne	.+10     	; 0x4ae <vfprintf+0x56>
 4a4:	b6 01       	movw	r22, r12
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	0e 94 23 04 	call	0x846	; 0x846 <fputc>
 4ac:	e7 cf       	rjmp	.-50     	; 0x47c <vfprintf+0x24>
 4ae:	91 2c       	mov	r9, r1
 4b0:	21 2c       	mov	r2, r1
 4b2:	31 2c       	mov	r3, r1
 4b4:	ff e1       	ldi	r31, 0x1F	; 31
 4b6:	f3 15       	cp	r31, r3
 4b8:	d8 f0       	brcs	.+54     	; 0x4f0 <vfprintf+0x98>
 4ba:	8b 32       	cpi	r24, 0x2B	; 43
 4bc:	79 f0       	breq	.+30     	; 0x4dc <vfprintf+0x84>
 4be:	38 f4       	brcc	.+14     	; 0x4ce <vfprintf+0x76>
 4c0:	80 32       	cpi	r24, 0x20	; 32
 4c2:	79 f0       	breq	.+30     	; 0x4e2 <vfprintf+0x8a>
 4c4:	83 32       	cpi	r24, 0x23	; 35
 4c6:	a1 f4       	brne	.+40     	; 0x4f0 <vfprintf+0x98>
 4c8:	23 2d       	mov	r18, r3
 4ca:	20 61       	ori	r18, 0x10	; 16
 4cc:	1d c0       	rjmp	.+58     	; 0x508 <vfprintf+0xb0>
 4ce:	8d 32       	cpi	r24, 0x2D	; 45
 4d0:	61 f0       	breq	.+24     	; 0x4ea <vfprintf+0x92>
 4d2:	80 33       	cpi	r24, 0x30	; 48
 4d4:	69 f4       	brne	.+26     	; 0x4f0 <vfprintf+0x98>
 4d6:	23 2d       	mov	r18, r3
 4d8:	21 60       	ori	r18, 0x01	; 1
 4da:	16 c0       	rjmp	.+44     	; 0x508 <vfprintf+0xb0>
 4dc:	83 2d       	mov	r24, r3
 4de:	82 60       	ori	r24, 0x02	; 2
 4e0:	38 2e       	mov	r3, r24
 4e2:	e3 2d       	mov	r30, r3
 4e4:	e4 60       	ori	r30, 0x04	; 4
 4e6:	3e 2e       	mov	r3, r30
 4e8:	2a c0       	rjmp	.+84     	; 0x53e <vfprintf+0xe6>
 4ea:	f3 2d       	mov	r31, r3
 4ec:	f8 60       	ori	r31, 0x08	; 8
 4ee:	1d c0       	rjmp	.+58     	; 0x52a <vfprintf+0xd2>
 4f0:	37 fc       	sbrc	r3, 7
 4f2:	2d c0       	rjmp	.+90     	; 0x54e <vfprintf+0xf6>
 4f4:	20 ed       	ldi	r18, 0xD0	; 208
 4f6:	28 0f       	add	r18, r24
 4f8:	2a 30       	cpi	r18, 0x0A	; 10
 4fa:	40 f0       	brcs	.+16     	; 0x50c <vfprintf+0xb4>
 4fc:	8e 32       	cpi	r24, 0x2E	; 46
 4fe:	b9 f4       	brne	.+46     	; 0x52e <vfprintf+0xd6>
 500:	36 fc       	sbrc	r3, 6
 502:	81 c1       	rjmp	.+770    	; 0x806 <vfprintf+0x3ae>
 504:	23 2d       	mov	r18, r3
 506:	20 64       	ori	r18, 0x40	; 64
 508:	32 2e       	mov	r3, r18
 50a:	19 c0       	rjmp	.+50     	; 0x53e <vfprintf+0xe6>
 50c:	36 fe       	sbrs	r3, 6
 50e:	06 c0       	rjmp	.+12     	; 0x51c <vfprintf+0xc4>
 510:	8a e0       	ldi	r24, 0x0A	; 10
 512:	98 9e       	mul	r9, r24
 514:	20 0d       	add	r18, r0
 516:	11 24       	eor	r1, r1
 518:	92 2e       	mov	r9, r18
 51a:	11 c0       	rjmp	.+34     	; 0x53e <vfprintf+0xe6>
 51c:	ea e0       	ldi	r30, 0x0A	; 10
 51e:	2e 9e       	mul	r2, r30
 520:	20 0d       	add	r18, r0
 522:	11 24       	eor	r1, r1
 524:	22 2e       	mov	r2, r18
 526:	f3 2d       	mov	r31, r3
 528:	f0 62       	ori	r31, 0x20	; 32
 52a:	3f 2e       	mov	r3, r31
 52c:	08 c0       	rjmp	.+16     	; 0x53e <vfprintf+0xe6>
 52e:	8c 36       	cpi	r24, 0x6C	; 108
 530:	21 f4       	brne	.+8      	; 0x53a <vfprintf+0xe2>
 532:	83 2d       	mov	r24, r3
 534:	80 68       	ori	r24, 0x80	; 128
 536:	38 2e       	mov	r3, r24
 538:	02 c0       	rjmp	.+4      	; 0x53e <vfprintf+0xe6>
 53a:	88 36       	cpi	r24, 0x68	; 104
 53c:	41 f4       	brne	.+16     	; 0x54e <vfprintf+0xf6>
 53e:	f7 01       	movw	r30, r14
 540:	93 fd       	sbrc	r25, 3
 542:	85 91       	lpm	r24, Z+
 544:	93 ff       	sbrs	r25, 3
 546:	81 91       	ld	r24, Z+
 548:	7f 01       	movw	r14, r30
 54a:	81 11       	cpse	r24, r1
 54c:	b3 cf       	rjmp	.-154    	; 0x4b4 <vfprintf+0x5c>
 54e:	98 2f       	mov	r25, r24
 550:	9f 7d       	andi	r25, 0xDF	; 223
 552:	95 54       	subi	r25, 0x45	; 69
 554:	93 30       	cpi	r25, 0x03	; 3
 556:	28 f4       	brcc	.+10     	; 0x562 <vfprintf+0x10a>
 558:	0c 5f       	subi	r16, 0xFC	; 252
 55a:	1f 4f       	sbci	r17, 0xFF	; 255
 55c:	9f e3       	ldi	r25, 0x3F	; 63
 55e:	99 83       	std	Y+1, r25	; 0x01
 560:	0d c0       	rjmp	.+26     	; 0x57c <vfprintf+0x124>
 562:	83 36       	cpi	r24, 0x63	; 99
 564:	31 f0       	breq	.+12     	; 0x572 <vfprintf+0x11a>
 566:	83 37       	cpi	r24, 0x73	; 115
 568:	71 f0       	breq	.+28     	; 0x586 <vfprintf+0x12e>
 56a:	83 35       	cpi	r24, 0x53	; 83
 56c:	09 f0       	breq	.+2      	; 0x570 <vfprintf+0x118>
 56e:	59 c0       	rjmp	.+178    	; 0x622 <vfprintf+0x1ca>
 570:	21 c0       	rjmp	.+66     	; 0x5b4 <vfprintf+0x15c>
 572:	f8 01       	movw	r30, r16
 574:	80 81       	ld	r24, Z
 576:	89 83       	std	Y+1, r24	; 0x01
 578:	0e 5f       	subi	r16, 0xFE	; 254
 57a:	1f 4f       	sbci	r17, 0xFF	; 255
 57c:	88 24       	eor	r8, r8
 57e:	83 94       	inc	r8
 580:	91 2c       	mov	r9, r1
 582:	53 01       	movw	r10, r6
 584:	13 c0       	rjmp	.+38     	; 0x5ac <vfprintf+0x154>
 586:	28 01       	movw	r4, r16
 588:	f2 e0       	ldi	r31, 0x02	; 2
 58a:	4f 0e       	add	r4, r31
 58c:	51 1c       	adc	r5, r1
 58e:	f8 01       	movw	r30, r16
 590:	a0 80       	ld	r10, Z
 592:	b1 80       	ldd	r11, Z+1	; 0x01
 594:	36 fe       	sbrs	r3, 6
 596:	03 c0       	rjmp	.+6      	; 0x59e <vfprintf+0x146>
 598:	69 2d       	mov	r22, r9
 59a:	70 e0       	ldi	r23, 0x00	; 0
 59c:	02 c0       	rjmp	.+4      	; 0x5a2 <vfprintf+0x14a>
 59e:	6f ef       	ldi	r22, 0xFF	; 255
 5a0:	7f ef       	ldi	r23, 0xFF	; 255
 5a2:	c5 01       	movw	r24, r10
 5a4:	0e 94 18 04 	call	0x830	; 0x830 <strnlen>
 5a8:	4c 01       	movw	r8, r24
 5aa:	82 01       	movw	r16, r4
 5ac:	f3 2d       	mov	r31, r3
 5ae:	ff 77       	andi	r31, 0x7F	; 127
 5b0:	3f 2e       	mov	r3, r31
 5b2:	16 c0       	rjmp	.+44     	; 0x5e0 <vfprintf+0x188>
 5b4:	28 01       	movw	r4, r16
 5b6:	22 e0       	ldi	r18, 0x02	; 2
 5b8:	42 0e       	add	r4, r18
 5ba:	51 1c       	adc	r5, r1
 5bc:	f8 01       	movw	r30, r16
 5be:	a0 80       	ld	r10, Z
 5c0:	b1 80       	ldd	r11, Z+1	; 0x01
 5c2:	36 fe       	sbrs	r3, 6
 5c4:	03 c0       	rjmp	.+6      	; 0x5cc <vfprintf+0x174>
 5c6:	69 2d       	mov	r22, r9
 5c8:	70 e0       	ldi	r23, 0x00	; 0
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <vfprintf+0x178>
 5cc:	6f ef       	ldi	r22, 0xFF	; 255
 5ce:	7f ef       	ldi	r23, 0xFF	; 255
 5d0:	c5 01       	movw	r24, r10
 5d2:	0e 94 0d 04 	call	0x81a	; 0x81a <strnlen_P>
 5d6:	4c 01       	movw	r8, r24
 5d8:	f3 2d       	mov	r31, r3
 5da:	f0 68       	ori	r31, 0x80	; 128
 5dc:	3f 2e       	mov	r3, r31
 5de:	82 01       	movw	r16, r4
 5e0:	33 fc       	sbrc	r3, 3
 5e2:	1b c0       	rjmp	.+54     	; 0x61a <vfprintf+0x1c2>
 5e4:	82 2d       	mov	r24, r2
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	88 16       	cp	r8, r24
 5ea:	99 06       	cpc	r9, r25
 5ec:	b0 f4       	brcc	.+44     	; 0x61a <vfprintf+0x1c2>
 5ee:	b6 01       	movw	r22, r12
 5f0:	80 e2       	ldi	r24, 0x20	; 32
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0e 94 23 04 	call	0x846	; 0x846 <fputc>
 5f8:	2a 94       	dec	r2
 5fa:	f4 cf       	rjmp	.-24     	; 0x5e4 <vfprintf+0x18c>
 5fc:	f5 01       	movw	r30, r10
 5fe:	37 fc       	sbrc	r3, 7
 600:	85 91       	lpm	r24, Z+
 602:	37 fe       	sbrs	r3, 7
 604:	81 91       	ld	r24, Z+
 606:	5f 01       	movw	r10, r30
 608:	b6 01       	movw	r22, r12
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	0e 94 23 04 	call	0x846	; 0x846 <fputc>
 610:	21 10       	cpse	r2, r1
 612:	2a 94       	dec	r2
 614:	21 e0       	ldi	r18, 0x01	; 1
 616:	82 1a       	sub	r8, r18
 618:	91 08       	sbc	r9, r1
 61a:	81 14       	cp	r8, r1
 61c:	91 04       	cpc	r9, r1
 61e:	71 f7       	brne	.-36     	; 0x5fc <vfprintf+0x1a4>
 620:	e8 c0       	rjmp	.+464    	; 0x7f2 <vfprintf+0x39a>
 622:	84 36       	cpi	r24, 0x64	; 100
 624:	11 f0       	breq	.+4      	; 0x62a <vfprintf+0x1d2>
 626:	89 36       	cpi	r24, 0x69	; 105
 628:	41 f5       	brne	.+80     	; 0x67a <vfprintf+0x222>
 62a:	f8 01       	movw	r30, r16
 62c:	37 fe       	sbrs	r3, 7
 62e:	07 c0       	rjmp	.+14     	; 0x63e <vfprintf+0x1e6>
 630:	60 81       	ld	r22, Z
 632:	71 81       	ldd	r23, Z+1	; 0x01
 634:	82 81       	ldd	r24, Z+2	; 0x02
 636:	93 81       	ldd	r25, Z+3	; 0x03
 638:	0c 5f       	subi	r16, 0xFC	; 252
 63a:	1f 4f       	sbci	r17, 0xFF	; 255
 63c:	08 c0       	rjmp	.+16     	; 0x64e <vfprintf+0x1f6>
 63e:	60 81       	ld	r22, Z
 640:	71 81       	ldd	r23, Z+1	; 0x01
 642:	07 2e       	mov	r0, r23
 644:	00 0c       	add	r0, r0
 646:	88 0b       	sbc	r24, r24
 648:	99 0b       	sbc	r25, r25
 64a:	0e 5f       	subi	r16, 0xFE	; 254
 64c:	1f 4f       	sbci	r17, 0xFF	; 255
 64e:	f3 2d       	mov	r31, r3
 650:	ff 76       	andi	r31, 0x6F	; 111
 652:	3f 2e       	mov	r3, r31
 654:	97 ff       	sbrs	r25, 7
 656:	09 c0       	rjmp	.+18     	; 0x66a <vfprintf+0x212>
 658:	90 95       	com	r25
 65a:	80 95       	com	r24
 65c:	70 95       	com	r23
 65e:	61 95       	neg	r22
 660:	7f 4f       	sbci	r23, 0xFF	; 255
 662:	8f 4f       	sbci	r24, 0xFF	; 255
 664:	9f 4f       	sbci	r25, 0xFF	; 255
 666:	f0 68       	ori	r31, 0x80	; 128
 668:	3f 2e       	mov	r3, r31
 66a:	2a e0       	ldi	r18, 0x0A	; 10
 66c:	30 e0       	ldi	r19, 0x00	; 0
 66e:	a3 01       	movw	r20, r6
 670:	0e 94 5f 04 	call	0x8be	; 0x8be <__ultoa_invert>
 674:	88 2e       	mov	r8, r24
 676:	86 18       	sub	r8, r6
 678:	45 c0       	rjmp	.+138    	; 0x704 <vfprintf+0x2ac>
 67a:	85 37       	cpi	r24, 0x75	; 117
 67c:	31 f4       	brne	.+12     	; 0x68a <vfprintf+0x232>
 67e:	23 2d       	mov	r18, r3
 680:	2f 7e       	andi	r18, 0xEF	; 239
 682:	b2 2e       	mov	r11, r18
 684:	2a e0       	ldi	r18, 0x0A	; 10
 686:	30 e0       	ldi	r19, 0x00	; 0
 688:	25 c0       	rjmp	.+74     	; 0x6d4 <vfprintf+0x27c>
 68a:	93 2d       	mov	r25, r3
 68c:	99 7f       	andi	r25, 0xF9	; 249
 68e:	b9 2e       	mov	r11, r25
 690:	8f 36       	cpi	r24, 0x6F	; 111
 692:	c1 f0       	breq	.+48     	; 0x6c4 <vfprintf+0x26c>
 694:	18 f4       	brcc	.+6      	; 0x69c <vfprintf+0x244>
 696:	88 35       	cpi	r24, 0x58	; 88
 698:	79 f0       	breq	.+30     	; 0x6b8 <vfprintf+0x260>
 69a:	b5 c0       	rjmp	.+362    	; 0x806 <vfprintf+0x3ae>
 69c:	80 37       	cpi	r24, 0x70	; 112
 69e:	19 f0       	breq	.+6      	; 0x6a6 <vfprintf+0x24e>
 6a0:	88 37       	cpi	r24, 0x78	; 120
 6a2:	21 f0       	breq	.+8      	; 0x6ac <vfprintf+0x254>
 6a4:	b0 c0       	rjmp	.+352    	; 0x806 <vfprintf+0x3ae>
 6a6:	e9 2f       	mov	r30, r25
 6a8:	e0 61       	ori	r30, 0x10	; 16
 6aa:	be 2e       	mov	r11, r30
 6ac:	b4 fe       	sbrs	r11, 4
 6ae:	0d c0       	rjmp	.+26     	; 0x6ca <vfprintf+0x272>
 6b0:	fb 2d       	mov	r31, r11
 6b2:	f4 60       	ori	r31, 0x04	; 4
 6b4:	bf 2e       	mov	r11, r31
 6b6:	09 c0       	rjmp	.+18     	; 0x6ca <vfprintf+0x272>
 6b8:	34 fe       	sbrs	r3, 4
 6ba:	0a c0       	rjmp	.+20     	; 0x6d0 <vfprintf+0x278>
 6bc:	29 2f       	mov	r18, r25
 6be:	26 60       	ori	r18, 0x06	; 6
 6c0:	b2 2e       	mov	r11, r18
 6c2:	06 c0       	rjmp	.+12     	; 0x6d0 <vfprintf+0x278>
 6c4:	28 e0       	ldi	r18, 0x08	; 8
 6c6:	30 e0       	ldi	r19, 0x00	; 0
 6c8:	05 c0       	rjmp	.+10     	; 0x6d4 <vfprintf+0x27c>
 6ca:	20 e1       	ldi	r18, 0x10	; 16
 6cc:	30 e0       	ldi	r19, 0x00	; 0
 6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <vfprintf+0x27c>
 6d0:	20 e1       	ldi	r18, 0x10	; 16
 6d2:	32 e0       	ldi	r19, 0x02	; 2
 6d4:	f8 01       	movw	r30, r16
 6d6:	b7 fe       	sbrs	r11, 7
 6d8:	07 c0       	rjmp	.+14     	; 0x6e8 <vfprintf+0x290>
 6da:	60 81       	ld	r22, Z
 6dc:	71 81       	ldd	r23, Z+1	; 0x01
 6de:	82 81       	ldd	r24, Z+2	; 0x02
 6e0:	93 81       	ldd	r25, Z+3	; 0x03
 6e2:	0c 5f       	subi	r16, 0xFC	; 252
 6e4:	1f 4f       	sbci	r17, 0xFF	; 255
 6e6:	06 c0       	rjmp	.+12     	; 0x6f4 <vfprintf+0x29c>
 6e8:	60 81       	ld	r22, Z
 6ea:	71 81       	ldd	r23, Z+1	; 0x01
 6ec:	80 e0       	ldi	r24, 0x00	; 0
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	0e 5f       	subi	r16, 0xFE	; 254
 6f2:	1f 4f       	sbci	r17, 0xFF	; 255
 6f4:	a3 01       	movw	r20, r6
 6f6:	0e 94 5f 04 	call	0x8be	; 0x8be <__ultoa_invert>
 6fa:	88 2e       	mov	r8, r24
 6fc:	86 18       	sub	r8, r6
 6fe:	fb 2d       	mov	r31, r11
 700:	ff 77       	andi	r31, 0x7F	; 127
 702:	3f 2e       	mov	r3, r31
 704:	36 fe       	sbrs	r3, 6
 706:	0d c0       	rjmp	.+26     	; 0x722 <vfprintf+0x2ca>
 708:	23 2d       	mov	r18, r3
 70a:	2e 7f       	andi	r18, 0xFE	; 254
 70c:	a2 2e       	mov	r10, r18
 70e:	89 14       	cp	r8, r9
 710:	58 f4       	brcc	.+22     	; 0x728 <vfprintf+0x2d0>
 712:	34 fe       	sbrs	r3, 4
 714:	0b c0       	rjmp	.+22     	; 0x72c <vfprintf+0x2d4>
 716:	32 fc       	sbrc	r3, 2
 718:	09 c0       	rjmp	.+18     	; 0x72c <vfprintf+0x2d4>
 71a:	83 2d       	mov	r24, r3
 71c:	8e 7e       	andi	r24, 0xEE	; 238
 71e:	a8 2e       	mov	r10, r24
 720:	05 c0       	rjmp	.+10     	; 0x72c <vfprintf+0x2d4>
 722:	b8 2c       	mov	r11, r8
 724:	a3 2c       	mov	r10, r3
 726:	03 c0       	rjmp	.+6      	; 0x72e <vfprintf+0x2d6>
 728:	b8 2c       	mov	r11, r8
 72a:	01 c0       	rjmp	.+2      	; 0x72e <vfprintf+0x2d6>
 72c:	b9 2c       	mov	r11, r9
 72e:	a4 fe       	sbrs	r10, 4
 730:	0f c0       	rjmp	.+30     	; 0x750 <vfprintf+0x2f8>
 732:	fe 01       	movw	r30, r28
 734:	e8 0d       	add	r30, r8
 736:	f1 1d       	adc	r31, r1
 738:	80 81       	ld	r24, Z
 73a:	80 33       	cpi	r24, 0x30	; 48
 73c:	21 f4       	brne	.+8      	; 0x746 <vfprintf+0x2ee>
 73e:	9a 2d       	mov	r25, r10
 740:	99 7e       	andi	r25, 0xE9	; 233
 742:	a9 2e       	mov	r10, r25
 744:	09 c0       	rjmp	.+18     	; 0x758 <vfprintf+0x300>
 746:	a2 fe       	sbrs	r10, 2
 748:	06 c0       	rjmp	.+12     	; 0x756 <vfprintf+0x2fe>
 74a:	b3 94       	inc	r11
 74c:	b3 94       	inc	r11
 74e:	04 c0       	rjmp	.+8      	; 0x758 <vfprintf+0x300>
 750:	8a 2d       	mov	r24, r10
 752:	86 78       	andi	r24, 0x86	; 134
 754:	09 f0       	breq	.+2      	; 0x758 <vfprintf+0x300>
 756:	b3 94       	inc	r11
 758:	a3 fc       	sbrc	r10, 3
 75a:	11 c0       	rjmp	.+34     	; 0x77e <vfprintf+0x326>
 75c:	a0 fe       	sbrs	r10, 0
 75e:	06 c0       	rjmp	.+12     	; 0x76c <vfprintf+0x314>
 760:	b2 14       	cp	r11, r2
 762:	88 f4       	brcc	.+34     	; 0x786 <vfprintf+0x32e>
 764:	28 0c       	add	r2, r8
 766:	92 2c       	mov	r9, r2
 768:	9b 18       	sub	r9, r11
 76a:	0e c0       	rjmp	.+28     	; 0x788 <vfprintf+0x330>
 76c:	b2 14       	cp	r11, r2
 76e:	60 f4       	brcc	.+24     	; 0x788 <vfprintf+0x330>
 770:	b6 01       	movw	r22, r12
 772:	80 e2       	ldi	r24, 0x20	; 32
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	0e 94 23 04 	call	0x846	; 0x846 <fputc>
 77a:	b3 94       	inc	r11
 77c:	f7 cf       	rjmp	.-18     	; 0x76c <vfprintf+0x314>
 77e:	b2 14       	cp	r11, r2
 780:	18 f4       	brcc	.+6      	; 0x788 <vfprintf+0x330>
 782:	2b 18       	sub	r2, r11
 784:	02 c0       	rjmp	.+4      	; 0x78a <vfprintf+0x332>
 786:	98 2c       	mov	r9, r8
 788:	21 2c       	mov	r2, r1
 78a:	a4 fe       	sbrs	r10, 4
 78c:	10 c0       	rjmp	.+32     	; 0x7ae <vfprintf+0x356>
 78e:	b6 01       	movw	r22, r12
 790:	80 e3       	ldi	r24, 0x30	; 48
 792:	90 e0       	ldi	r25, 0x00	; 0
 794:	0e 94 23 04 	call	0x846	; 0x846 <fputc>
 798:	a2 fe       	sbrs	r10, 2
 79a:	17 c0       	rjmp	.+46     	; 0x7ca <vfprintf+0x372>
 79c:	a1 fc       	sbrc	r10, 1
 79e:	03 c0       	rjmp	.+6      	; 0x7a6 <vfprintf+0x34e>
 7a0:	88 e7       	ldi	r24, 0x78	; 120
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	02 c0       	rjmp	.+4      	; 0x7aa <vfprintf+0x352>
 7a6:	88 e5       	ldi	r24, 0x58	; 88
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	b6 01       	movw	r22, r12
 7ac:	0c c0       	rjmp	.+24     	; 0x7c6 <vfprintf+0x36e>
 7ae:	8a 2d       	mov	r24, r10
 7b0:	86 78       	andi	r24, 0x86	; 134
 7b2:	59 f0       	breq	.+22     	; 0x7ca <vfprintf+0x372>
 7b4:	a1 fe       	sbrs	r10, 1
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <vfprintf+0x364>
 7b8:	8b e2       	ldi	r24, 0x2B	; 43
 7ba:	01 c0       	rjmp	.+2      	; 0x7be <vfprintf+0x366>
 7bc:	80 e2       	ldi	r24, 0x20	; 32
 7be:	a7 fc       	sbrc	r10, 7
 7c0:	8d e2       	ldi	r24, 0x2D	; 45
 7c2:	b6 01       	movw	r22, r12
 7c4:	90 e0       	ldi	r25, 0x00	; 0
 7c6:	0e 94 23 04 	call	0x846	; 0x846 <fputc>
 7ca:	89 14       	cp	r8, r9
 7cc:	38 f4       	brcc	.+14     	; 0x7dc <vfprintf+0x384>
 7ce:	b6 01       	movw	r22, r12
 7d0:	80 e3       	ldi	r24, 0x30	; 48
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	0e 94 23 04 	call	0x846	; 0x846 <fputc>
 7d8:	9a 94       	dec	r9
 7da:	f7 cf       	rjmp	.-18     	; 0x7ca <vfprintf+0x372>
 7dc:	8a 94       	dec	r8
 7de:	f3 01       	movw	r30, r6
 7e0:	e8 0d       	add	r30, r8
 7e2:	f1 1d       	adc	r31, r1
 7e4:	80 81       	ld	r24, Z
 7e6:	b6 01       	movw	r22, r12
 7e8:	90 e0       	ldi	r25, 0x00	; 0
 7ea:	0e 94 23 04 	call	0x846	; 0x846 <fputc>
 7ee:	81 10       	cpse	r8, r1
 7f0:	f5 cf       	rjmp	.-22     	; 0x7dc <vfprintf+0x384>
 7f2:	22 20       	and	r2, r2
 7f4:	09 f4       	brne	.+2      	; 0x7f8 <vfprintf+0x3a0>
 7f6:	42 ce       	rjmp	.-892    	; 0x47c <vfprintf+0x24>
 7f8:	b6 01       	movw	r22, r12
 7fa:	80 e2       	ldi	r24, 0x20	; 32
 7fc:	90 e0       	ldi	r25, 0x00	; 0
 7fe:	0e 94 23 04 	call	0x846	; 0x846 <fputc>
 802:	2a 94       	dec	r2
 804:	f6 cf       	rjmp	.-20     	; 0x7f2 <vfprintf+0x39a>
 806:	f6 01       	movw	r30, r12
 808:	86 81       	ldd	r24, Z+6	; 0x06
 80a:	97 81       	ldd	r25, Z+7	; 0x07
 80c:	02 c0       	rjmp	.+4      	; 0x812 <vfprintf+0x3ba>
 80e:	8f ef       	ldi	r24, 0xFF	; 255
 810:	9f ef       	ldi	r25, 0xFF	; 255
 812:	2b 96       	adiw	r28, 0x0b	; 11
 814:	e2 e1       	ldi	r30, 0x12	; 18
 816:	0c 94 d9 04 	jmp	0x9b2	; 0x9b2 <__epilogue_restores__>

0000081a <strnlen_P>:
 81a:	fc 01       	movw	r30, r24
 81c:	05 90       	lpm	r0, Z+
 81e:	61 50       	subi	r22, 0x01	; 1
 820:	70 40       	sbci	r23, 0x00	; 0
 822:	01 10       	cpse	r0, r1
 824:	d8 f7       	brcc	.-10     	; 0x81c <strnlen_P+0x2>
 826:	80 95       	com	r24
 828:	90 95       	com	r25
 82a:	8e 0f       	add	r24, r30
 82c:	9f 1f       	adc	r25, r31
 82e:	08 95       	ret

00000830 <strnlen>:
 830:	fc 01       	movw	r30, r24
 832:	61 50       	subi	r22, 0x01	; 1
 834:	70 40       	sbci	r23, 0x00	; 0
 836:	01 90       	ld	r0, Z+
 838:	01 10       	cpse	r0, r1
 83a:	d8 f7       	brcc	.-10     	; 0x832 <strnlen+0x2>
 83c:	80 95       	com	r24
 83e:	90 95       	com	r25
 840:	8e 0f       	add	r24, r30
 842:	9f 1f       	adc	r25, r31
 844:	08 95       	ret

00000846 <fputc>:
 846:	0f 93       	push	r16
 848:	1f 93       	push	r17
 84a:	cf 93       	push	r28
 84c:	df 93       	push	r29
 84e:	fb 01       	movw	r30, r22
 850:	23 81       	ldd	r18, Z+3	; 0x03
 852:	21 fd       	sbrc	r18, 1
 854:	03 c0       	rjmp	.+6      	; 0x85c <fputc+0x16>
 856:	8f ef       	ldi	r24, 0xFF	; 255
 858:	9f ef       	ldi	r25, 0xFF	; 255
 85a:	2c c0       	rjmp	.+88     	; 0x8b4 <fputc+0x6e>
 85c:	22 ff       	sbrs	r18, 2
 85e:	16 c0       	rjmp	.+44     	; 0x88c <fputc+0x46>
 860:	46 81       	ldd	r20, Z+6	; 0x06
 862:	57 81       	ldd	r21, Z+7	; 0x07
 864:	24 81       	ldd	r18, Z+4	; 0x04
 866:	35 81       	ldd	r19, Z+5	; 0x05
 868:	42 17       	cp	r20, r18
 86a:	53 07       	cpc	r21, r19
 86c:	44 f4       	brge	.+16     	; 0x87e <fputc+0x38>
 86e:	a0 81       	ld	r26, Z
 870:	b1 81       	ldd	r27, Z+1	; 0x01
 872:	9d 01       	movw	r18, r26
 874:	2f 5f       	subi	r18, 0xFF	; 255
 876:	3f 4f       	sbci	r19, 0xFF	; 255
 878:	31 83       	std	Z+1, r19	; 0x01
 87a:	20 83       	st	Z, r18
 87c:	8c 93       	st	X, r24
 87e:	26 81       	ldd	r18, Z+6	; 0x06
 880:	37 81       	ldd	r19, Z+7	; 0x07
 882:	2f 5f       	subi	r18, 0xFF	; 255
 884:	3f 4f       	sbci	r19, 0xFF	; 255
 886:	37 83       	std	Z+7, r19	; 0x07
 888:	26 83       	std	Z+6, r18	; 0x06
 88a:	14 c0       	rjmp	.+40     	; 0x8b4 <fputc+0x6e>
 88c:	8b 01       	movw	r16, r22
 88e:	ec 01       	movw	r28, r24
 890:	fb 01       	movw	r30, r22
 892:	00 84       	ldd	r0, Z+8	; 0x08
 894:	f1 85       	ldd	r31, Z+9	; 0x09
 896:	e0 2d       	mov	r30, r0
 898:	09 95       	icall
 89a:	89 2b       	or	r24, r25
 89c:	e1 f6       	brne	.-72     	; 0x856 <fputc+0x10>
 89e:	d8 01       	movw	r26, r16
 8a0:	16 96       	adiw	r26, 0x06	; 6
 8a2:	8d 91       	ld	r24, X+
 8a4:	9c 91       	ld	r25, X
 8a6:	17 97       	sbiw	r26, 0x07	; 7
 8a8:	01 96       	adiw	r24, 0x01	; 1
 8aa:	17 96       	adiw	r26, 0x07	; 7
 8ac:	9c 93       	st	X, r25
 8ae:	8e 93       	st	-X, r24
 8b0:	16 97       	sbiw	r26, 0x06	; 6
 8b2:	ce 01       	movw	r24, r28
 8b4:	df 91       	pop	r29
 8b6:	cf 91       	pop	r28
 8b8:	1f 91       	pop	r17
 8ba:	0f 91       	pop	r16
 8bc:	08 95       	ret

000008be <__ultoa_invert>:
 8be:	fa 01       	movw	r30, r20
 8c0:	aa 27       	eor	r26, r26
 8c2:	28 30       	cpi	r18, 0x08	; 8
 8c4:	51 f1       	breq	.+84     	; 0x91a <__stack+0x1b>
 8c6:	20 31       	cpi	r18, 0x10	; 16
 8c8:	81 f1       	breq	.+96     	; 0x92a <__stack+0x2b>
 8ca:	e8 94       	clt
 8cc:	6f 93       	push	r22
 8ce:	6e 7f       	andi	r22, 0xFE	; 254
 8d0:	6e 5f       	subi	r22, 0xFE	; 254
 8d2:	7f 4f       	sbci	r23, 0xFF	; 255
 8d4:	8f 4f       	sbci	r24, 0xFF	; 255
 8d6:	9f 4f       	sbci	r25, 0xFF	; 255
 8d8:	af 4f       	sbci	r26, 0xFF	; 255
 8da:	b1 e0       	ldi	r27, 0x01	; 1
 8dc:	3e d0       	rcall	.+124    	; 0x95a <__stack+0x5b>
 8de:	b4 e0       	ldi	r27, 0x04	; 4
 8e0:	3c d0       	rcall	.+120    	; 0x95a <__stack+0x5b>
 8e2:	67 0f       	add	r22, r23
 8e4:	78 1f       	adc	r23, r24
 8e6:	89 1f       	adc	r24, r25
 8e8:	9a 1f       	adc	r25, r26
 8ea:	a1 1d       	adc	r26, r1
 8ec:	68 0f       	add	r22, r24
 8ee:	79 1f       	adc	r23, r25
 8f0:	8a 1f       	adc	r24, r26
 8f2:	91 1d       	adc	r25, r1
 8f4:	a1 1d       	adc	r26, r1
 8f6:	6a 0f       	add	r22, r26
 8f8:	71 1d       	adc	r23, r1
 8fa:	81 1d       	adc	r24, r1
 8fc:	91 1d       	adc	r25, r1
 8fe:	a1 1d       	adc	r26, r1
 900:	20 d0       	rcall	.+64     	; 0x942 <__stack+0x43>
 902:	09 f4       	brne	.+2      	; 0x906 <__stack+0x7>
 904:	68 94       	set
 906:	3f 91       	pop	r19
 908:	2a e0       	ldi	r18, 0x0A	; 10
 90a:	26 9f       	mul	r18, r22
 90c:	11 24       	eor	r1, r1
 90e:	30 19       	sub	r19, r0
 910:	30 5d       	subi	r19, 0xD0	; 208
 912:	31 93       	st	Z+, r19
 914:	de f6       	brtc	.-74     	; 0x8cc <__ultoa_invert+0xe>
 916:	cf 01       	movw	r24, r30
 918:	08 95       	ret
 91a:	46 2f       	mov	r20, r22
 91c:	47 70       	andi	r20, 0x07	; 7
 91e:	40 5d       	subi	r20, 0xD0	; 208
 920:	41 93       	st	Z+, r20
 922:	b3 e0       	ldi	r27, 0x03	; 3
 924:	0f d0       	rcall	.+30     	; 0x944 <__stack+0x45>
 926:	c9 f7       	brne	.-14     	; 0x91a <__stack+0x1b>
 928:	f6 cf       	rjmp	.-20     	; 0x916 <__stack+0x17>
 92a:	46 2f       	mov	r20, r22
 92c:	4f 70       	andi	r20, 0x0F	; 15
 92e:	40 5d       	subi	r20, 0xD0	; 208
 930:	4a 33       	cpi	r20, 0x3A	; 58
 932:	18 f0       	brcs	.+6      	; 0x93a <__stack+0x3b>
 934:	49 5d       	subi	r20, 0xD9	; 217
 936:	31 fd       	sbrc	r19, 1
 938:	40 52       	subi	r20, 0x20	; 32
 93a:	41 93       	st	Z+, r20
 93c:	02 d0       	rcall	.+4      	; 0x942 <__stack+0x43>
 93e:	a9 f7       	brne	.-22     	; 0x92a <__stack+0x2b>
 940:	ea cf       	rjmp	.-44     	; 0x916 <__stack+0x17>
 942:	b4 e0       	ldi	r27, 0x04	; 4
 944:	a6 95       	lsr	r26
 946:	97 95       	ror	r25
 948:	87 95       	ror	r24
 94a:	77 95       	ror	r23
 94c:	67 95       	ror	r22
 94e:	ba 95       	dec	r27
 950:	c9 f7       	brne	.-14     	; 0x944 <__stack+0x45>
 952:	00 97       	sbiw	r24, 0x00	; 0
 954:	61 05       	cpc	r22, r1
 956:	71 05       	cpc	r23, r1
 958:	08 95       	ret
 95a:	9b 01       	movw	r18, r22
 95c:	ac 01       	movw	r20, r24
 95e:	0a 2e       	mov	r0, r26
 960:	06 94       	lsr	r0
 962:	57 95       	ror	r21
 964:	47 95       	ror	r20
 966:	37 95       	ror	r19
 968:	27 95       	ror	r18
 96a:	ba 95       	dec	r27
 96c:	c9 f7       	brne	.-14     	; 0x960 <__stack+0x61>
 96e:	62 0f       	add	r22, r18
 970:	73 1f       	adc	r23, r19
 972:	84 1f       	adc	r24, r20
 974:	95 1f       	adc	r25, r21
 976:	a0 1d       	adc	r26, r0
 978:	08 95       	ret

0000097a <__prologue_saves__>:
 97a:	2f 92       	push	r2
 97c:	3f 92       	push	r3
 97e:	4f 92       	push	r4
 980:	5f 92       	push	r5
 982:	6f 92       	push	r6
 984:	7f 92       	push	r7
 986:	8f 92       	push	r8
 988:	9f 92       	push	r9
 98a:	af 92       	push	r10
 98c:	bf 92       	push	r11
 98e:	cf 92       	push	r12
 990:	df 92       	push	r13
 992:	ef 92       	push	r14
 994:	ff 92       	push	r15
 996:	0f 93       	push	r16
 998:	1f 93       	push	r17
 99a:	cf 93       	push	r28
 99c:	df 93       	push	r29
 99e:	cd b7       	in	r28, 0x3d	; 61
 9a0:	de b7       	in	r29, 0x3e	; 62
 9a2:	ca 1b       	sub	r28, r26
 9a4:	db 0b       	sbc	r29, r27
 9a6:	0f b6       	in	r0, 0x3f	; 63
 9a8:	f8 94       	cli
 9aa:	de bf       	out	0x3e, r29	; 62
 9ac:	0f be       	out	0x3f, r0	; 63
 9ae:	cd bf       	out	0x3d, r28	; 61
 9b0:	09 94       	ijmp

000009b2 <__epilogue_restores__>:
 9b2:	2a 88       	ldd	r2, Y+18	; 0x12
 9b4:	39 88       	ldd	r3, Y+17	; 0x11
 9b6:	48 88       	ldd	r4, Y+16	; 0x10
 9b8:	5f 84       	ldd	r5, Y+15	; 0x0f
 9ba:	6e 84       	ldd	r6, Y+14	; 0x0e
 9bc:	7d 84       	ldd	r7, Y+13	; 0x0d
 9be:	8c 84       	ldd	r8, Y+12	; 0x0c
 9c0:	9b 84       	ldd	r9, Y+11	; 0x0b
 9c2:	aa 84       	ldd	r10, Y+10	; 0x0a
 9c4:	b9 84       	ldd	r11, Y+9	; 0x09
 9c6:	c8 84       	ldd	r12, Y+8	; 0x08
 9c8:	df 80       	ldd	r13, Y+7	; 0x07
 9ca:	ee 80       	ldd	r14, Y+6	; 0x06
 9cc:	fd 80       	ldd	r15, Y+5	; 0x05
 9ce:	0c 81       	ldd	r16, Y+4	; 0x04
 9d0:	1b 81       	ldd	r17, Y+3	; 0x03
 9d2:	aa 81       	ldd	r26, Y+2	; 0x02
 9d4:	b9 81       	ldd	r27, Y+1	; 0x01
 9d6:	ce 0f       	add	r28, r30
 9d8:	d1 1d       	adc	r29, r1
 9da:	0f b6       	in	r0, 0x3f	; 63
 9dc:	f8 94       	cli
 9de:	de bf       	out	0x3e, r29	; 62
 9e0:	0f be       	out	0x3f, r0	; 63
 9e2:	cd bf       	out	0x3d, r28	; 61
 9e4:	ed 01       	movw	r28, r26
 9e6:	08 95       	ret

000009e8 <_exit>:
 9e8:	f8 94       	cli

000009ea <__stop_program>:
 9ea:	ff cf       	rjmp	.-2      	; 0x9ea <__stop_program>
