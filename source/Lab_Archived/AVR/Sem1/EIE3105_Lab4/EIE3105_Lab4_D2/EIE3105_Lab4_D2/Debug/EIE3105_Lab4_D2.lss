
EIE3105_Lab4_D2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000164  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  000001d8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000208  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000072a  00000000  00000000  00000280  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000065c  00000000  00000000  000009aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000016f  00000000  00000000  00001006  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000078  00000000  00000000  00001178  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003a5  00000000  00000000  000011f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000085  00000000  00000000  00001595  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  0000161a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 76 00 	jmp	0xec	; 0xec <__vector_18>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e6       	ldi	r30, 0x64	; 100
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 30       	cpi	r26, 0x04	; 4
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ac 00 	call	0x158	; 0x158 <main>
  9e:	0c 94 b0 00 	jmp	0x160	; 0x160 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_19>:
unsigned char rcv2 = '\0';
unsigned char count = 0;
unsigned char state = 0;

ISR(USART_UDRE_vect)
{
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
	if (state == 0)
  b2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
  b6:	81 11       	cpse	r24, r1
  b8:	04 c0       	rjmp	.+8      	; 0xc2 <__vector_19+0x1c>
	{
		UDR0 = default_char;
  ba:	81 e6       	ldi	r24, 0x61	; 97
  bc:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  c0:	0f c0       	rjmp	.+30     	; 0xe0 <__vector_19+0x3a>
	}
	else if (state == 1)
  c2:	81 30       	cpi	r24, 0x01	; 1
  c4:	69 f4       	brne	.+26     	; 0xe0 <__vector_19+0x3a>
	{
		if (count < 10)
  c6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <count>
  ca:	8a 30       	cpi	r24, 0x0A	; 10
  cc:	48 f4       	brcc	.+18     	; 0xe0 <__vector_19+0x3a>
		{
			UDR0 = rcv;
  ce:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <rcv>
  d2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
			count++;
  d6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <count>
  da:	8f 5f       	subi	r24, 0xFF	; 255
  dc:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <count>
		}
	}
};
  e0:	8f 91       	pop	r24
  e2:	0f 90       	pop	r0
  e4:	0f be       	out	0x3f, r0	; 63
  e6:	0f 90       	pop	r0
  e8:	1f 90       	pop	r1
  ea:	18 95       	reti

000000ec <__vector_18>:

ISR(USART_RX_vect)
{
  ec:	1f 92       	push	r1
  ee:	0f 92       	push	r0
  f0:	0f b6       	in	r0, 0x3f	; 63
  f2:	0f 92       	push	r0
  f4:	11 24       	eor	r1, r1
  f6:	8f 93       	push	r24
  f8:	9f 93       	push	r25
	if (state == 0)
  fa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
  fe:	81 11       	cpse	r24, r1
 100:	08 c0       	rjmp	.+16     	; 0x112 <__vector_18+0x26>
	{
		rcv = UDR0;
 102:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 106:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <rcv>
		state = 1;
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 110:	12 c0       	rjmp	.+36     	; 0x136 <__vector_18+0x4a>
	}
	else if (state == 1)
 112:	81 30       	cpi	r24, 0x01	; 1
 114:	81 f4       	brne	.+32     	; 0x136 <__vector_18+0x4a>
	{
		rcv2 = UDR0;
 116:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 11a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <rcv2>
		if (rcv2 == rcv)
 11e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <rcv>
 122:	89 13       	cpse	r24, r25
 124:	08 c0       	rjmp	.+16     	; 0x136 <__vector_18+0x4a>
		{
			rcv = '\0';
 126:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <rcv>
			rcv2 = '\0';
 12a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <rcv2>
			count = 0;
 12e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <count>
			state = 0;
 132:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
		}
	}
};
 136:	9f 91       	pop	r25
 138:	8f 91       	pop	r24
 13a:	0f 90       	pop	r0
 13c:	0f be       	out	0x3f, r0	; 63
 13e:	0f 90       	pop	r0
 140:	1f 90       	pop	r1
 142:	18 95       	reti

00000144 <usart_init>:

void usart_init()
{
	UCSR0B = (1<<TXEN0) | (1<<RXEN0) | (1<<UDRE0) | (1<<RXCIE0);
 144:	88 eb       	ldi	r24, 0xB8	; 184
 146:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1<<UCSZ00) | (1<<UCSZ01);
 14a:	86 e0       	ldi	r24, 0x06	; 6
 14c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UBRR0L = 0x67;
 150:	87 e6       	ldi	r24, 0x67	; 103
 152:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 156:	08 95       	ret

00000158 <main>:
} 

int main(void)
{
	usart_init();
 158:	0e 94 a2 00 	call	0x144	; 0x144 <usart_init>
	sei();
 15c:	78 94       	sei
 15e:	ff cf       	rjmp	.-2      	; 0x15e <main+0x6>

00000160 <_exit>:
 160:	f8 94       	cli

00000162 <__stop_program>:
 162:	ff cf       	rjmp	.-2      	; 0x162 <__stop_program>
